#Create configmap from kubectl
kubectl create configmap test-config --from-literal=test.type=unit --from-literal=test.exec=always
kubectl describe cm test-config
kubectl get cm -o yaml

#Create pod with config map
kubectl apply -f 07b_pod_with_configmap.yaml
kubectl logs test-configmap
----------------------------------------------------------
kubectl apply -f 07c_demo_secret.yaml
kubectl apply -f 07d_demo_pod_with_secret.yaml
kubectl logs secret-pod
------------------------------------------------------------------------------------
#Use secret as volume
apiVersion: v1
kind: Pod
metadata:
  name: secret-pod
spec:
  restartPolicy: Never
  volumes:
  - name: credentials
    secret:
      secretName: admin-access
      defaultMode: 0440 
  containers:
    - name: secret-container
      image: alpine:3.8
      command: [ "/bin/sh", "-c", "cat /etc/foo/username.txt /etc/foo/password.txt" ]
      volumeMounts:
      - name: credentials
        mountPath: "/etc/foo"
        readOnly: true
--------------------------------------------------------------------------------------
#Use secret as reference
apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
spec:
  containers:
  - name: mycontainer
    image: redis
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: username
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: password
  restartPolicy: Never
--------------------------------------------------------------------------------------
#Use secret access registry
apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
spec:
  containers:
  - name: channel
    image: registry-internal.cn-hangzhou.aliyuncs.com/yin32167/channel:dev-1.0
  ports:
  - containerPort: 8114
  imagePullSecrets:
  - name: regsecret
  restartPolicy: Never
